package com.example.hatd.ui.user.ChiTietLichSuChuyenDi

import androidx.compose.foundation.Image
import androidx.compose.foundation.background
import androidx.compose.foundation.border
import androidx.compose.foundation.clickable
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.material3.*
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.draw.alpha
import androidx.compose.ui.draw.clip
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.layout.ContentScale
import androidx.compose.ui.res.painterResource
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import com.example.hatd.R
import androidx.compose.foundation.shape.CircleShape
import androidx.compose.foundation.BorderStroke
import androidx.compose.material.icons.Icons
import androidx.compose.material.icons.filled.ArrowBack

@Composable
fun ChiTietLichSuChuyenDiScreen(onBackClick: () -> Unit = {}) {
    Column(
        modifier = Modifier
            .fillMaxSize()
            .background(Color.White)
            .padding(horizontal = 16.dp)
            .padding(top = 28.dp)
    ) {
        // üîπ Thanh ti√™u ƒë·ªÅ
        Row(
            modifier = Modifier
                .fillMaxWidth()
                .padding(top = 16.dp),
            verticalAlignment = Alignment.CenterVertically
        ) {
            IconButton(onClick = { /* Quay l·∫°i */ }) {
                Icon(
                    imageVector = Icons.Default.ArrowBack,
                    contentDescription = "Back",
                    tint = Color.Black
                )
            }
            Text(
                text = "Chi ti·∫øt chuy·∫øn ƒëi",
                fontSize = 20.sp,
                fontWeight = FontWeight.Bold,
                modifier = Modifier.padding(start = 8.dp)
            )
        }

        Spacer(modifier = Modifier.height(16.dp))

        // üîπ Th√¥ng tin t√†i x·∫ø
        Card(
            modifier = Modifier
                .fillMaxWidth()
                .height(160.dp)
                .padding(8.dp),
            colors = CardDefaults.cardColors(containerColor = Color.Transparent),
            shape = RoundedCornerShape(24.dp),
            border = BorderStroke(1.dp, Color(0xFF0081F1)) // vi·ªÅn xanh d∆∞∆°ng
        ) {
            Box(modifier = Modifier.fillMaxSize()) {

                // ·∫¢nh n·ªÅn trong card t√†i x·∫ø
                Image(
                    painter = painterResource(id = R.drawable.nenthongtindriver),
                    contentDescription = "Background Driver",
                    modifier = Modifier.fillMaxSize(),
                    contentScale = ContentScale.Crop
                )

                // Avatar, xe m√°y v√† t√™n t√†i x·∫ø
                Row(
                    modifier = Modifier
                        .align(Alignment.CenterStart)
                        .padding(start = 12.dp),
                    verticalAlignment = Alignment.CenterVertically
                ) {
                    Column(horizontalAlignment = Alignment.CenterHorizontally) {
                        Box {
                            // Avatar t√†i x·∫ø
                            Image(
                                painter = painterResource(id = R.drawable.avtdriver),
                                contentDescription = "·∫¢nh t√†i x·∫ø",
                                modifier = Modifier
                                    .size(80.dp)
                                    .offset(x = (-8).dp)
                                    .background(Color.White, CircleShape)
                                    .border(2.dp, Color(0xFF0081F1), CircleShape)
                            )

                            // ·∫¢nh xe m√°y
                            Image(
                                painter = painterResource(id = R.drawable.xemay),
                                contentDescription = "Xe m√°y",
                                modifier = Modifier
                                    .size(50.dp)
                                    .align(Alignment.BottomEnd)
                                    .offset(x = 6.dp, y = 6.dp)
                            )
                        }

                        Spacer(modifier = Modifier.height(8.dp))

                        // T√™n t√†i x·∫ø v√† ƒë√°nh gi√° sao
                        Row(
                            verticalAlignment = Alignment.CenterVertically,
                            modifier = Modifier.padding(start = 8.dp)
                        ) {
                            Text(
                                text = "H·ª©a Anh T·ªõi ƒê√≥n",
                                fontWeight = FontWeight.SemiBold,
                                fontSize = 14.sp,
                                color = Color(0xFF333333)
                            )
                            Spacer(modifier = Modifier.width(6.dp))
                            Text(
                                text = "5.0‚≠ê",
                                color = Color.Black,
                                fontWeight = FontWeight.Medium,
                                fontSize = 14.sp
                            )
                        }
                    }
                }

                // Bi·ªÉn s·ªë xe, t√™n xe
                Column(
                    modifier = Modifier
                        .align(Alignment.TopEnd)
                        .padding(top = 16.dp, end = 16.dp),
                    horizontalAlignment = Alignment.End
                ) {
                    Surface(
                        shape = RoundedCornerShape(12.dp),
                        border = BorderStroke(1.dp, Color(0xFF0081F1)),
                        color = Color(0xFFE3F2FD),
                        modifier = Modifier.padding(4.dp)
                    ) {
                        Text(
                            text = "59TA-113.15",
                            fontWeight = FontWeight.Bold,
                            fontSize = 16.sp,
                            color = Color(0xFF0081F1),
                            modifier = Modifier.padding(horizontal = 8.dp, vertical = 4.dp)
                        )
                    }

                    Text(
                        text = "EVO.HATD CYAN",
                        fontSize = 12.sp,
                        color = Color(0xFF007ACC)
                    )
                }

                // Logo g√≥c d∆∞·ªõi ph·∫£i
                Image(
                    painter = painterResource(id = R.drawable.logo),
                    contentDescription = "Logo HATD",
                    modifier = Modifier
                        .size(120.dp)
                        .align(Alignment.BottomEnd)
                        .offset(x = 10.dp, y = 30.dp)
                        .padding(bottom = 8.dp, end = 16.dp)
                )
            }
        }

        Spacer(modifier = Modifier.height(16.dp))

        // üîπ Th√¥ng tin chuy·∫øn ƒëi
        Box(
            modifier = Modifier
                .fillMaxWidth()
                .border(1.dp, Color(0xFF4ABDE0), RoundedCornerShape(16.dp))
                .clip(RoundedCornerShape(16.dp))
                .background(Color.White)
        ) {
            Box {
                // ·∫¢nh n·ªÅn m·ªù ph√≠a sau ph·∫ßn chi ti·∫øt chuy·∫øn ƒëi
                Image(
                    painter = painterResource(id = R.drawable.anhnenchitietchuyendi),
                    contentDescription = null,
                    modifier = Modifier
                        .fillMaxWidth()
                        .clip(RoundedCornerShape(16.dp)),
                    contentScale = ContentScale.Crop,
                    alpha = 0.35f
                )

                Column(modifier = Modifier.padding(16.dp)) {
                    Text("HATD bike", fontWeight = FontWeight.Bold, fontSize = 16.sp)
                    Text("10/10/2025 ‚Ä¢ 7:00 CH", color = Color.Gray, fontSize = 14.sp)
                    Spacer(Modifier.height(12.dp))

                    // ƒêi·ªÉm ƒë√≥n
                    Row(verticalAlignment = Alignment.CenterVertically) {
                        Icon(
                            painter = painterResource(id = R.drawable.diemdon),
                            contentDescription = null,
                            tint = Color(0xFF000000),
                            modifier = Modifier.size(20.dp)
                        )
                        Spacer(Modifier.width(8.dp))
                        Column {
                            Text("Chung C∆∞ Khang Gia", fontWeight = FontWeight.Bold)
                            Text(
                                "ƒê∆∞·ªùng s·ªë 45 ph∆∞·ªùng 14, qu·∫≠n G√≤ V·∫•p",
                                color = Color.Gray,
                                fontSize = 13.sp
                            )
                        }
                    }

                    // ·∫¢nh ƒë∆∞·ªùng n·ªëi gi·ªØa ƒëi·ªÉm ƒë√≥n v√† ƒëi·ªÉm ƒë·∫øn
                    Image(
                        painter = painterResource(id = R.drawable.duonggachnoi),
                        contentDescription = "ƒê∆∞·ªùng n·ªëi gi·ªØa ƒëi·ªÉm ƒë√≥n v√† ƒëi·ªÉm ƒë·∫øn",
                        modifier = Modifier
                            .padding(start = 2.dp, top = 2.dp, bottom = 2.dp)
                            .height(40.dp)
                    )

                    // ƒêi·ªÉm ƒë·∫øn
                    Row(verticalAlignment = Alignment.CenterVertically) {
                        Icon(
                            painter = painterResource(id = R.drawable.diemden),
                            contentDescription = null,
                            tint = Color(0xFF2196F3),
                            modifier = Modifier.size(20.dp)
                        )
                        Spacer(Modifier.width(8.dp))
                        Column {
                            Text("ƒê·∫°i h·ªçc Giao Th√¥ng V·∫≠n T·∫£i Tp. HCM", fontWeight = FontWeight.Bold)
                            Text(
                                "S·ªë 70 ƒë∆∞·ªùng T√¥ K√Ω, H·ªì Ch√≠ Minh",
                                color = Color.Gray,
                                fontSize = 13.sp
                            )
                        }
                    }

                    Spacer(Modifier.height(12.dp))

                    // Ti·ªÅn m·∫∑t
                    Row(verticalAlignment = Alignment.CenterVertically) {
                        Icon(
                            painter = painterResource(id = R.drawable.tien),
                            contentDescription = null,
                            tint = Color(0xFF4CAF50),
                            modifier = Modifier.size(20.dp)
                        )
                        Spacer(Modifier.width(8.dp))
                        Text("Ti·ªÅn m·∫∑t", fontWeight = FontWeight.Bold)
                        Spacer(Modifier.weight(1f))
                        Text("14.500ƒë", fontWeight = FontWeight.Bold)
                    }

                    Spacer(Modifier.height(12.dp))
                    Text("Ghi ch√∫", fontWeight = FontWeight.Bold)
                }

                // H√¨nh xe nh·ªè g√≥c d∆∞·ªõi b√™n ph·∫£i
                Image(
                    painter = painterResource(id = R.drawable.xegocduoiphai),
                    contentDescription = null,
                    modifier = Modifier
                        .align(Alignment.BottomEnd)
                        .size(90.dp)
                        .padding(end = 4.dp, bottom = 4.dp)
                )

                // H√¨nh xe nh·ªè g√≥c d∆∞·ªõi b√™n tr√°i
                Image(
                    painter = painterResource(id = R.drawable.xegocduoitrai),
                    contentDescription = null,
                    modifier = Modifier
                        .align(Alignment.BottomStart)
                        .size(90.dp)
                        .padding(start = 4.dp, bottom = 4.dp)
                )
            }
        }

        Spacer(modifier = Modifier.height(20.dp))

        // Hai n√∫t h√†nh ƒë·ªông d∆∞·ªõi c√πng
        Row(
            modifier = Modifier
                .fillMaxWidth()
                .padding(bottom = 16.dp),
            horizontalArrangement = Arrangement.SpaceEvenly
        ) {
            OutlinedButton(
                onClick = { /* ƒê√°nh gi√° */ },
                modifier = Modifier
                    .width(150.dp)
                    .height(48.dp),
                shape = RoundedCornerShape(12.dp)
            ) {
                Text("ƒê√°nh gi√°", color = Color.Black, fontSize = 16.sp)
            }

            Button(
                onClick = { /* ƒê·∫∑t l·∫°i */ },
                colors = ButtonDefaults.buttonColors(containerColor = Color(0xFF2A5EE1)),
                modifier = Modifier
                    .width(150.dp)
                    .height(48.dp),
                shape = RoundedCornerShape(12.dp)
            ) {
                Text("ƒê·∫∑t l·∫°i", color = Color.White, fontSize = 16.sp)
            }
        }
    }
}
