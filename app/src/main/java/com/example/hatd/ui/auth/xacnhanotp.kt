package com.example.hatd.ui.auth.xacnhanotp

import androidx.compose.foundation.BorderStroke
import androidx.compose.foundation.background
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.material3.*
import androidx.compose.material.icons.Icons
import androidx.compose.material.icons.filled.ArrowBack
import androidx.compose.runtime.*
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.text.style.TextAlign
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp

@Composable
fun xacnhanotpScreen(
    onBack: () -> Unit = {},
    onContinue: () -> Unit = {}
) {
    var name by remember { mutableStateOf("") }
    var cccd by remember { mutableStateOf("") }

    Column(
        modifier = Modifier
            .fillMaxSize()
            .padding(24.dp)
            .background(Color.White), // n·ªÅn to√†n b·ªô m√†n h√¨nh tr·∫Øng
        horizontalAlignment = Alignment.CenterHorizontally
    ) {

        // üîπ N√∫t back
        Row(
            verticalAlignment = Alignment.CenterVertically,
            modifier = Modifier
                .fillMaxWidth()
                .padding(bottom = 24.dp)
        ) {
            IconButton(onClick = onBack) {
                Icon(
                    imageVector = Icons.Default.ArrowBack,
                    contentDescription = "Back",
                    tint = Color.Black
                )
            }
        }

        // üîπ TextField T√™n
        Text(
            text = "T√™n",
            fontWeight = FontWeight.Bold,
            fontSize = 18.sp,
            modifier = Modifier.align(Alignment.Start)
        )
        TextField(
            value = name,
            onValueChange = { name = it },
            placeholder = { Text("B·∫°n mu·ªën ƒë∆∞·ª£c g·ªçi b·∫±ng t√™n g√¨ ?", color = Color.Gray) },
            singleLine = true,
            modifier = Modifier
                .fillMaxWidth()
                .padding(top = 4.dp, bottom = 16.dp)
                .background(Color.White) // n·ªÅn tr·∫Øng cho TextField
        )

        // üîπ TextField CCCD
        Text(
            text = "CCCD",
            fontWeight = FontWeight.Bold,
            fontSize = 18.sp,
            modifier = Modifier.align(Alignment.Start)
        )
        TextField(
            value = cccd,
            onValueChange = { cccd = it },
            placeholder = { Text("", color = Color.Gray) },
            singleLine = true,
            modifier = Modifier
                .fillMaxWidth()
                .padding(top = 4.dp, bottom = 16.dp)
                .background(Color.White) // n·ªÅn tr·∫Øng cho TextField
        )

        Spacer(modifier = Modifier.height(16.dp))

        // üîπ ƒêo·∫°n m√¥ t·∫£
        Text(
            text = "B·∫±ng vi·ªác ti·∫øp t·ª•c, b·∫°n x√°c nh·∫≠n r·∫±ng b·∫°n ƒë√£ ƒë·ªçc v√† ƒë·ªìng √Ω v·ªõi " +
                    "ƒêi·ªÅu Kho·∫£n D·ªãch V·ª• v√† Th√¥ng B√°o B·∫£o M·∫≠t c·ªßa ch√∫ng t√¥i v·ªÅ c√°ch ch√∫ng t√¥i thu th·∫≠p, s·ª≠ d·ª•ng, ti·∫øt l·ªô v√† x·ª≠ l√Ω d·ªØ li·ªáu c√° nh√¢n c·ªßa b·∫°n.",
            color = Color.Black,
            fontSize = 14.sp,
            textAlign = TextAlign.Center,
            modifier = Modifier.padding(horizontal = 8.dp)
        )

        Spacer(modifier = Modifier.height(24.dp))

        // üîπ N√∫t Ti·∫øp t·ª•c
        OutlinedButton(
            onClick = onContinue,
            modifier = Modifier
                .fillMaxWidth(0.6f)
                .height(48.dp),
            shape = RoundedCornerShape(30.dp),
            border = BorderStroke(2.dp, Color(0xFF4ABDE0))
        ) {
            Text(
                text = "Ti·∫øp t·ª•c",
                color = Color.Black,
                fontSize = 16.sp,
                fontWeight = FontWeight.Bold
            )
        }
    }
}

